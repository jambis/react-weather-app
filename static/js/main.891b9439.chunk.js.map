{"version":3,"sources":["apis/darksky.js","apis/graphhopper.js","components/SearchBar.js","actions/index.js","components/CityItem.js","components/CitiesList.js","components/HourlyItem.js","components/HourlyList.js","components/WeeklyItem.js","components/WeeklyList.js","components/App.js","reducers/weatherReducer.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","concat","process","params","key","locale","SearchBar","state","term","componentDidUpdate","_callee","prevProps","prevState","_this$props$weather$c","lat","lng","regenerator_default","a","wrap","_context","prev","next","weather","cities","_this","props","length","point","fetchWeather","stop","this","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","searchLocation","react_default","createElement","className","onSubmit","placeholder","onChange","Component","connect","location","_ref","Object","asyncToGenerator","mark","dispatch","response","graphhopper","get","q","sent","type","payload","data","hits","_x","apply","arguments","_ref2","_callee2","_context2","darksky","_x2","CityItem","deleteItem","deleteCity","datakey","tempdata","currently","icon","weather_icons_react","size","color","center","oldDesc","newDesc","_","replace","startCase","sunsetTime","moment","unix","daily","sunriseTime","currentTime","time","inRange","hour","_this$props$tempdata$","temperature","precipProbability","humidity","pressure","visibility","apparentTemperature","summary","setClassName","data-tooltip","data-inverted","renderIcon","style","marginTop","renderDescription","cityname","name","round","Link","to","pathname","onClick","renderItem","index","CitiesList","map","city","i","components_CityItem","renderedList","HourlyItem","tempData","format","dailyData","getTime","getRainPercent","HourlyList","hourly","slice","hourlyData","components_HourlyItem","WeeklyItem","getDate","apparentTemperatureHigh","apparentTemperatureLow","WeeklyList","components_WeeklyItem","App","BrowserRouter","Route","path","exact","render","components_SearchBar","components_CitiesList","component","initialState","combineReducers","undefined","action","objectSpread","filter","j","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.891b9439.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst KEY = process.env.REACT_APP_DS_APIKEY;\n\n//example https://api.darksky.net/forecast/[key]/[latitude],[longitude]\n\nexport default axios.create({\n  baseURL: `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/${KEY}`\n});\n","//TODO: Switch to http://www.geonames.org/ api\nimport axios from \"axios\";\n\nconst KEY = process.env.REACT_APP_GH_APIKEY;\n\n//example https://graphhopper.com/api/1/geocode?q=berlin&locale=de&debug=true&key=[YOUR_KEY]\n\nexport default axios.create({\n  baseURL: \"https://graphhopper.com/api/1/geocode\",\n  params: {\n    key: KEY,\n    locale: \"en\"\n  }\n});\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { searchLocation, fetchWeather } from \"../actions\";\nclass SearchBar extends Component {\n  state = { term: \"\" };\n\n  componentDidUpdate = async (prevProps, prevState) => {\n    if (prevProps.weather.cities < this.props.weather.cities) {\n      let { lat, lng } = this.props.weather.cities[\n        this.props.weather.cities.length - 1\n      ].point;\n      this.props.fetchWeather(lat, lng);\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({ term: event.target.value });\n  };\n\n  onFormSubmit = event => {\n    event.preventDefault();\n\n    this.props.searchLocation(this.state.term);\n    this.setState({ term: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"search-bar ui segment\">\n        <form className=\"ui form\" onSubmit={this.onFormSubmit}>\n          <input\n            placeholder=\"Search for a city...\"\n            onChange={this.onInputChange}\n            value={this.state.term}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weather: state.weather\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { searchLocation, fetchWeather }\n)(SearchBar);\n","import darksky from \"../apis/darksky\";\nimport graphhopper from \"../apis/graphhopper\";\n\nexport const signIn = userId => {\n  return null;\n};\n\nexport const signOut = () => {\n  return null;\n};\n\nexport const searchLocation = location => async dispatch => {\n  const response = await graphhopper.get(\"\", {\n    params: { q: location }\n  });\n\n  dispatch({ type: \"SEARCH_LOCATION\", payload: response.data.hits[0] });\n};\n\nexport const fetchWeather = (lat, lng) => async dispatch => {\n  const response = await darksky.get(\n    `/${lat},${lng}?exclude=flags,alerts,minutely`\n  );\n\n  dispatch({ type: \"FETCH_WEATHER\", payload: response.data });\n};\n\nexport const deleteCity = index => {\n  return { type: \"DELETE_CITY\", payload: index };\n};\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { deleteCity } from \"../actions\";\nimport {\n  WiDaySunny,\n  WiNightClear,\n  WiRain,\n  WiSnow,\n  WiSleet,\n  WiWindy,\n  WiFog,\n  WiCloudy,\n  WiHail,\n  WiTornado,\n  WiCloud,\n  WiThunderstorm,\n  WiNightAltPartlyCloudy,\n  WiDaySunnyOvercast,\n  WiHumidity,\n  WiUmbrella,\n  WiBarometer,\n  WiThermometer\n} from \"weather-icons-react\";\nimport \"../css/CityItem.css\";\n\nclass CityItem extends Component {\n  renderIcon() {\n    /*\n    values: clear-day, clear-night, rain, snow, sleet, wind, fog, cloudy, partly-cloudy-day, or partly-cloudy-night. \n    (Developers should ensure that a sensible default is defined, as additional values, such as hail, thunderstorm, \n    or tornado, may be defined in the future.)\n    */\n    let iconSize = 48;\n    let iconColor = \"#000\";\n    switch (this.props.tempdata.currently.icon) {\n      case \"clear-day\":\n        return <WiDaySunny size={iconSize} color={iconColor} />;\n      case \"clear-night\":\n        return <WiNightClear size={iconSize} color={iconColor} />;\n      case \"rain\":\n        return <WiRain size={iconSize} color={iconColor} center />;\n      case \"snow\":\n        return <WiSnow size={iconSize} color={iconColor} />;\n      case \"sleet\":\n        return <WiSleet size={iconSize} color={iconColor} />;\n      case \"wind\":\n        return <WiWindy size={iconSize} color={iconColor} />;\n      case \"fog\":\n        return <WiFog size={iconSize} color={iconColor} />;\n      case \"cloudy\":\n        return <WiCloudy size={iconSize} color={iconColor} />;\n      case \"partly-cloudy-day\":\n        return <WiDaySunnyOvercast size={iconSize} color={iconColor} />;\n      case \"partly-cloudy-night\":\n        return <WiNightAltPartlyCloudy size={iconSize} color={iconColor} />;\n      case \"tornado\":\n        return <WiTornado size={iconSize} color={iconColor} />;\n      case \"hail\":\n        return <WiHail size={iconSize} color={iconColor} />;\n      case \"thunderstorm\":\n        return <WiThunderstorm size={iconSize} color={iconColor} />;\n      default:\n        return <WiCloud size={iconSize} color={iconColor} />;\n    }\n  }\n\n  renderDescription() {\n    let oldDesc = this.props.tempdata.currently.icon;\n    let newDesc = _.replace(oldDesc, /-/g, \" \");\n    return _.startCase(newDesc);\n  }\n  setClassName() {\n    let sunsetTime = moment.unix(this.props.tempdata.daily.data[0].sunsetTime);\n    let sunriseTime = moment.unix(\n      this.props.tempdata.daily.data[0].sunriseTime\n    );\n    let currentTime = moment.unix(this.props.tempdata.currently.time);\n\n    if (_.inRange(currentTime.hour(), sunriseTime.hour(), sunsetTime.hour())) {\n      return \"city-day-bg\";\n    } else {\n      return \"city-night-bg\";\n    }\n  }\n\n  renderItem() {\n    let {\n      temperature,\n      precipProbability,\n      humidity,\n      pressure,\n      visibility,\n      apparentTemperature,\n      summary\n    } = this.props.tempdata.currently;\n\n    return (\n      <div className=\"City-Item\">\n        <div className=\"ui attached segment\">\n          <div className={`ui center aligned grid ${this.setClassName()}`}>\n            <div className=\"row\">\n              <div\n                className=\"four wide column\"\n                data-tooltip={summary}\n                data-inverted=\"\"\n              >\n                {this.renderIcon()}\n                <h3 className=\"ui header\" style={{ marginTop: \"0\" }}>\n                  {this.renderDescription()}\n                </h3>\n              </div>\n              <div className=\"eight wide column\">\n                <h1 className=\"ui header\" style={{ marginTop: \"1em\" }}>\n                  {this.props.cityname.name}\n                </h1>\n              </div>\n              <div\n                className=\"four wide column\"\n                data-tooltip={`Feels like ${_.round(apparentTemperature, 0)}°F`}\n                data-inverted=\"\"\n              >\n                <WiThermometer\n                  size={48}\n                  color=\"#000\"\n                  style={{ marginTop: \"0\" }}\n                />\n                <h1 className=\"ui header\" style={{ marginTop: \"0\" }}>\n                  {_.round(temperature, 0)}°F\n                </h1>\n              </div>\n            </div>\n            <div className=\"ui divider\" />\n            <div className=\"row\">\n              <div\n                className=\"four wide column\"\n                data-tooltip=\"Chance of rain\"\n                data-inverted=\"\"\n              >\n                <WiUmbrella size={48} color=\"#000\" />\n                <h3 className=\"ui header\" style={{ marginTop: \"0\" }}>\n                  {_.round(precipProbability, 2) * 100}%\n                </h3>\n              </div>\n              <div\n                className=\"four wide column\"\n                data-tooltip=\"Humidity percentage.\"\n                data-inverted=\"\"\n              >\n                <WiHumidity size={48} color=\"#000\" />\n                <h3 className=\"ui header\" style={{ marginTop: \"0\" }}>\n                  {_.round(humidity, 2) * 100}%\n                </h3>\n              </div>\n              <div\n                className=\"four wide column\"\n                data-tooltip=\"Pressure at sea level in millibars\"\n                data-inverted=\"\"\n              >\n                <WiBarometer size={48} color=\"#000\" />\n                <h3 className=\"ui header\" style={{ marginTop: \"0\" }}>\n                  {pressure} mbar\n                </h3>\n              </div>\n              <div\n                className=\"four wide column\"\n                data-tooltip=\"Visibility in miles.\"\n                data-inverted=\"\"\n              >\n                <WiFog size={48} color=\"#000\" />\n                <h3 className=\"ui header\" style={{ marginTop: \"0\" }}>\n                  {visibility} mi\n                </h3>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"ui three bottom attached buttons City-Item__Btn\">\n          <Link\n            to={{\n              pathname: `/hourly/${this.props.cityname.name}`,\n              state: { tempdata: this.props.tempdata }\n            }}\n            className=\"ui black button\"\n          >\n            <i className=\"clock outline icon\" />\n            24h Forecast\n          </Link>\n          <Link\n            to={{\n              pathname: `/weekly/${this.props.cityname.name}`,\n              state: { tempdata: this.props.tempdata }\n            }}\n            className=\"ui black button\"\n          >\n            <i className=\"calendar alternate outline icon\" />\n            Weekly Forecast\n          </Link>\n          <button onClick={this.deleteItem} className=\"ui black button\">\n            <i className=\"trash alternate outline icon\" />\n            Remove City\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  deleteItem = () => {\n    this.props.deleteCity(this.props.datakey);\n  };\n\n  render() {\n    if (this.props.tempdata) {\n      return this.renderItem();\n    } else {\n      return (\n        <div className=\"ui segment\">\n          <div className=\"ui active inverted dimmer\">\n            <div className=\"ui massive text loader\">\n              Fetching data for {this.props.cityname.name}\n            </div>\n          </div>\n          <p>-</p>\n          <p>-</p>\n          <p>-</p>\n          <p>-</p>\n          <p>-</p>\n        </div>\n      );\n    }\n  }\n}\n\nexport default connect(\n  null,\n  { deleteCity }\n)(CityItem);\n","import React, { Component } from \"react\";\nimport CityItem from \"./CityItem\";\nimport { connect } from \"react-redux\";\n\nclass CitiesList extends Component {\n  renderedList() {\n    return this.props.weather.cities.map((city, i) => {\n      return (\n        <CityItem\n          key={i}\n          datakey={i}\n          cityname={city}\n          tempdata={this.props.weather.tempdata[i]}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"ui relaxed divided list\">\n        <div>{this.renderedList()}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { weather: state.weather };\n};\nexport default connect(mapStateToProps)(CitiesList);\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport {\n  WiDaySunny,\n  WiNightClear,\n  WiRain,\n  WiSnow,\n  WiSleet,\n  WiWindy,\n  WiFog,\n  WiCloudy,\n  WiHail,\n  WiTornado,\n  WiCloud,\n  WiThunderstorm,\n  WiNightAltPartlyCloudy,\n  WiDaySunnyOvercast\n} from \"weather-icons-react\";\nimport \"../css/HourlyItem.css\";\n\nclass HourlyItem extends Component {\n  renderIcon() {\n    /*\n        values: clear-day, clear-night, rain, snow, sleet, wind, fog, cloudy, partly-cloudy-day, or partly-cloudy-night. \n        (Developers should ensure that a sensible default is defined, as additional values, such as hail, thunderstorm, \n        or tornado, may be defined in the future.)\n        */\n    let iconSize = 54;\n    let iconColor = \"#000\";\n    switch (this.props.tempData.icon) {\n      case \"clear-day\":\n        return <WiDaySunny size={iconSize} color={iconColor} />;\n      case \"clear-night\":\n        return <WiNightClear size={iconSize} color={iconColor} />;\n      case \"rain\":\n        return <WiRain size={iconSize} color={iconColor} center />;\n      case \"snow\":\n        return <WiSnow size={iconSize} color={iconColor} />;\n      case \"sleet\":\n        return <WiSleet size={iconSize} color={iconColor} />;\n      case \"wind\":\n        return <WiWindy size={iconSize} color={iconColor} />;\n      case \"fog\":\n        return <WiFog size={iconSize} color={iconColor} />;\n      case \"cloudy\":\n        return <WiCloudy size={iconSize} color={iconColor} />;\n      case \"partly-cloudy-day\":\n        return <WiDaySunnyOvercast size={iconSize} color={iconColor} />;\n      case \"partly-cloudy-night\":\n        return <WiNightAltPartlyCloudy size={iconSize} color={iconColor} />;\n      case \"tornado\":\n        return <WiTornado size={iconSize} color={iconColor} />;\n      case \"hail\":\n        return <WiHail size={iconSize} color={iconColor} />;\n      case \"thunderstorm\":\n        return <WiThunderstorm size={iconSize} color={iconColor} />;\n      default:\n        return <WiCloud size={iconSize} color={iconColor} />;\n    }\n  }\n\n  getTime() {\n    let timeUnix = moment.unix(this.props.tempData.time);\n    return timeUnix.format(\"h:mm A (ddd)\");\n  }\n\n  getRainPercent() {\n    if (this.props.tempData.precipProbability === 0) {\n      return \"No Rain\";\n    } else {\n      return `${_.round(this.props.tempData.precipProbability, 2) * 100}%`;\n    }\n  }\n\n  setClassName() {\n    let sunsetTime = moment.unix(this.props.dailyData.sunsetTime);\n    let sunriseTime = moment.unix(this.props.dailyData.sunriseTime);\n    let currentTime = moment.unix(this.props.tempData.time);\n\n    if (_.inRange(currentTime.hour(), sunriseTime.hour(), sunsetTime.hour())) {\n      return \"hour-day-bg\";\n    } else {\n      return \"hour-night-bg\";\n    }\n  }\n\n  renderItem() {\n    return (\n      <div className=\"ui center aligned grid\">\n        <div className={`row ${this.setClassName()}`}>\n          <div className=\"four wide column\">{this.renderIcon()}</div>\n          <div className=\"eight wide column\">\n            <h2 className=\"ui header\">{this.getTime()}</h2>\n            <h3 className=\"ui header\" style={{ marginTop: \"0\" }}>\n              {this.props.tempData.summary}\n            </h3>\n          </div>\n          <div className=\"four wide column\">\n            <h2 className=\"ui header\">\n              {_.round(this.props.tempData.temperature, 0)}°F\n            </h2>\n            <h3 className=\"ui header\" style={{ marginTop: \"0\" }}>\n              {this.getRainPercent()}\n            </h3>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return <div className=\"item\">{this.renderItem()}</div>;\n  }\n}\n\nexport default HourlyItem;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport HourlyItem from \"./HourlyItem\";\n\nclass HourlyList extends Component {\n  renderedList() {\n    return this.props.location.state.tempdata.hourly.data\n      .slice(0, 24)\n      .map((hourlyData, i) => {\n        return (\n          <HourlyItem\n            key={i}\n            dailyData={this.props.location.state.tempdata.daily.data[0]}\n            tempData={hourlyData}\n          />\n        );\n      });\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"ui top attached buttons\">\n          <Link to=\"/\" className=\"ui black button\">\n            <i className=\"arrow alternate circle left icon\" />\n            Back\n          </Link>\n        </div>\n        <div className=\"ui attached relaxed divided list segment\">\n          {this.renderedList()}\n        </div>\n\n        <div className=\"ui bottom attached buttons\">\n          <Link to=\"/\" className=\"ui black button\">\n            <i className=\"arrow alternate circle left icon\" />\n            Back\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HourlyList;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport {\n  WiDaySunny,\n  WiNightClear,\n  WiRain,\n  WiSnow,\n  WiSleet,\n  WiWindy,\n  WiFog,\n  WiCloudy,\n  WiHail,\n  WiTornado,\n  WiCloud,\n  WiThunderstorm,\n  WiNightAltPartlyCloudy,\n  WiDaySunnyOvercast\n} from \"weather-icons-react\";\n\nclass WeeklyItem extends Component {\n  renderIcon() {\n    /*values: clear-day, clear-night, rain, snow, sleet, wind, fog, cloudy, partly-cloudy-day, or partly-cloudy-night. \n        (Developers should ensure that a sensible default is defined, as additional values, such as hail, thunderstorm, \n        or tornado, may be defined in the future.)*/\n\n    let iconSize = 54;\n    let iconColor = \"#000\";\n    switch (this.props.tempData.icon) {\n      case \"clear-day\":\n        return <WiDaySunny size={iconSize} color={iconColor} />;\n      case \"clear-night\":\n        return <WiNightClear size={iconSize} color={iconColor} />;\n      case \"rain\":\n        return <WiRain size={iconSize} color={iconColor} center />;\n      case \"snow\":\n        return <WiSnow size={iconSize} color={iconColor} />;\n      case \"sleet\":\n        return <WiSleet size={iconSize} color={iconColor} />;\n      case \"wind\":\n        return <WiWindy size={iconSize} color={iconColor} />;\n      case \"fog\":\n        return <WiFog size={iconSize} color={iconColor} />;\n      case \"cloudy\":\n        return <WiCloudy size={iconSize} color={iconColor} />;\n      case \"partly-cloudy-day\":\n        return <WiDaySunnyOvercast size={iconSize} color={iconColor} />;\n      case \"partly-cloudy-night\":\n        return <WiNightAltPartlyCloudy size={iconSize} color={iconColor} />;\n      case \"tornado\":\n        return <WiTornado size={iconSize} color={iconColor} />;\n      case \"hail\":\n        return <WiHail size={iconSize} color={iconColor} />;\n      case \"thunderstorm\":\n        return <WiThunderstorm size={iconSize} color={iconColor} />;\n      default:\n        return <WiCloud size={iconSize} color={iconColor} />;\n    }\n  }\n\n  getDate() {\n    let timeUnix = moment.unix(this.props.tempData.time);\n    return timeUnix.format(\"dddd, MMMM Do YYYY\");\n  }\n\n  renderItem() {\n    return (\n      <div className=\"ui center aligned grid\">\n        <div className=\"row\">\n          <div className=\"four wide column\">{this.renderIcon()}</div>\n          <div className=\"eight wide column\">\n            <h2 className=\"ui header\">{this.getDate()}</h2>\n            <h3 className=\"ui header\" style={{ marginTop: \"0\" }}>\n              {this.props.tempData.summary}\n            </h3>\n          </div>\n          <div className=\"four wide column\">\n            <h3 className=\"ui header\">\n              Hi: {_.round(this.props.tempData.apparentTemperatureHigh, 0)}°F\n            </h3>\n            <h3 className=\"ui header\" style={{ marginTop: \"0\" }}>\n              Lo: {_.round(this.props.tempData.apparentTemperatureLow, 0)}°F\n            </h3>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return <div className=\"item\">{this.renderItem()}</div>;\n  }\n}\n\nexport default WeeklyItem;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport WeeklyItem from \"./WeeklyItem\";\n\nclass WeeklyList extends Component {\n  renderedList() {\n    return this.props.location.state.tempdata.daily.data\n      .slice(0, 7)\n      .map((dailyData, i) => {\n        return <WeeklyItem key={i} tempData={dailyData} />;\n      });\n  }\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"ui top attached buttons\">\n          <Link to=\"/\" className=\"ui black button\">\n            <i className=\"arrow alternate circle left icon\" />\n            Back\n          </Link>\n        </div>\n        <div className=\"ui attached relaxed divided list segment\">\n          {this.renderedList()}\n        </div>\n\n        <div className=\"ui bottom attached buttons\">\n          <Link to=\"/\" className=\"ui black button\">\n            <i className=\"arrow alternate circle left icon\" />\n            Back\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WeeklyList;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport SearchBar from \"./SearchBar\";\nimport CitiesList from \"./CitiesList\";\nimport HourlyList from \"./HourlyList\";\nimport WeeklyList from \"./WeeklyList\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"ui container\">\n        <BrowserRouter>\n          <div>\n            <Route\n              path=\"/\"\n              exact\n              render={() => (\n                <div>\n                  <SearchBar />\n                  <CitiesList />\n                </div>\n              )}\n            />\n            <Route path=\"/hourly/:cityname\" exact component={HourlyList} />\n            <Route path=\"/weekly/:cityname\" exact component={WeeklyList} />\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n  cities: [],\n  tempdata: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"SEARCH_LOCATION\":\n      return { ...state, cities: state.cities.concat(action.payload) };\n    case \"FETCH_WEATHER\":\n      return { ...state, tempdata: state.tempdata.concat(action.payload) };\n    case \"DELETE_CITY\":\n      return {\n        ...state,\n        cities: state.cities.filter((_, i) => i !== action.payload),\n        tempdata: state.tempdata.filter((_, j) => j !== action.payload)\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport weatherReducer from \"./weatherReducer\";\n\nexport default combineReducers({\n  weather: weatherReducer\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reduxThunk from \"redux-thunk\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}